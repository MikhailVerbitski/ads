version: '3.8'
services:
  postgres:
    container_name: ads-postgres
    image: postgres:14.1
    user: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: always
    environment:
      - POSTGRES_USER=${DATABASE_HOST}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=ads_backend_development
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - /Users/mikhail/projects/education_projects/ads_cache/pgdata:/var/lib/postgresql/data/pgdata
  backend:
    container_name: ads-backend
    # entrypoint: ["/app/docker-entrypoint.sh"]
    image: ads-backend:1.5
    build: https://github.com/MikhailVerbitski/ads-backend.git#main
    ports:
      - "3000:3000"
    command: ["rails", "server", "-b", "0.0.0.0", "-p", "3000"]
    environment:
      - RACK_ENV=${RACK_ENV}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    depends_on:
      - "postgres"
  front:
    container_name: ads-front
    build: https://github.com/MikhailVerbitski/ads-client.git#main
    ports:
      - "8080:8080"
    depends_on:
      - "backend"